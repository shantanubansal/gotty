package client

import (
	"crypto/tls"
	"fmt"
	"github.com/shantanubansal/gotty/hubble/util"
	"github.com/spectrocloud/hubble/base/herr"
	"github.com/spectrocloud/hubble/config"
	"math/rand"
	nethttp "net/http"
	"time"
)

type HubbleClient struct {
	Endpoint string
}

type UserInfo struct {
	cli        HubbleClient
	Token      string
	HeartBeat  time.Time
	KubeConfig string
	UserName   string
	Password   string
}

var users = map[string]UserInfo{}

func User(config Config, token string) UserInfo {
	//Refresh Token

	// Get Validate and Get KubeConfig

	//create User
	return UserInfo{
		cli:       HubbleClient{},
		Token:     "",
		HeartBeat: time.Time{},
		KubeConfig: `apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM2akNDQWRLZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXhOREEzTURjME9Gb1hEVE15TURZeE1UQTNNVEkwT0Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTCtLClJaUnd0ekY4cHRHUnNwNHBnMXhBRGRUdEJ5Wm9ORWRQejdBR3g0eWlCelBVUU8zWVJHNEFUdnNlV3FVZlZOMFkKTFhRNGRLUG5XS2htMksvSTJrc0ptK25nNzU1SHdyVkczeHpVVnpPdHYzeGphUE5EZldpMTFjOG54NDFNa280eApUSTN3QlVVOHg5TWJrNzhrejJyc3UzTml2L3N5Vm04ZTB5L3JlL1loQkpRMHB5YlUwTW5yN2NOTVBiT1VVb2w4CmVsc3dGV2FpcFRaTWVQWEtONFJ6bjdSU3cvRGIyTW5mczVqTEhHS25CZ0NWL1ljeEZDWmF4ekhQRDJuaXlkT2QKT1AvNmpjY2RpYnVOL2EyWFR3Qkc5c2Y4K3BDSjB0SVJQZ2VkVGFWak1SRXUrL2Fjbk1laWJNMXJRaTAvN05oRgpvdDVCTzVBWURqaWxRNG5rRWk4Q0F3RUFBYU5GTUVNd0RnWURWUjBQQVFIL0JBUURBZ0trTUJJR0ExVWRFd0VCCi93UUlNQVlCQWY4Q0FRQXdIUVlEVlIwT0JCWUVGR3BqSU5qeTNrRU5meU94Wnc3RS9HdFI4MS9tTUEwR0NTcUcKU0liM0RRRUJDd1VBQTRJQkFRQVl2bmRlUmIyU1BpTUJ1bkRsNWxQSURoeGlsa01GeldxSkdqSEswdnpaT2x3dwpTK1lwcjdDRTNNbXZZTDVIZzZFUjd1MFh2THlNWW5NQ25WOVRVNWt0YkkwalJnVXhHUlhFNkZLZ0xHTlpXeXFtCkErR2pONFFNczRGQTU4ZjRnTG1rUmx4Tlg5TjAxT1ZXZmpKdU5nLzRKMTJvTFFiQWp4ZFA2UDRnQ2ZXNlRaVjIKbUN5WXRBT1QveDFaaHZhbmpVYk92M1crZ0IyZXJlTUlTMlI4c01vcnAzdWNHWENQNTB6UkpRL2pGbnJxUk5ybgpicW9ZajBsaUhLVlA0NUhTbUdLTDlLU0tTMHN4N3VJbG9wQjc5L1dxVDhDVXhveWxQWXdpdEhWVDU5enQ3dmh6CjdiTFh2TklPUG5NeHp2S25UOERqOHF4K0p4eXI0T0JzM2dpOWtpeHgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    server: https://cluster-62a8344320d803553d0f0b4f.proxy.dev.spectrocloud.com:443
  name: cluster-t-2
contexts:
- context:
    cluster: cluster-t-2
    user: cluster-t-2-admin
  name: cluster-t-2-admin@cluster-t-2
current-context: cluster-t-2-admin@cluster-t-2
kind: Config
preferences: {}
users:
- name: cluster-t-2-admin
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lJTVJGNGxIdXJZUUF3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TWpBMk1UUXdOekEzTkRoYUZ3MHlNekEyTVRRd056RXlORGxhTURReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sa3dGd1lEVlFRREV4QnJkV0psY201bGRHVnpMV0ZrCmJXbHVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXpQUC9UWVJqeWxQcFZ0N1EKaFdhekdaZW1DOGxWRXRNZW5TRUd1N1U0QXViN0xpMWsyWXJOV1BIWUh1L2dKMVhiamkvQ3N3djczMlk0VzV5eQpoMVBOb3ZjSHE3Y0NTdTA5dzJyeUUzMFQ5WEo2QVBKZXVpNVNwMExucHY0WXVFVE1LMGNGSml6ZmVTalJlUUQzClVpcUJuYmIvWExDTE1HUVZsNUh5NWV4Q2pvS0l1RDk2WmRWbW5GQ3JndGEwWWVoMUQwUXdoU3E4M3B4WXVSVm4KN3VmaC9hNmtsdWlERkI4S0dZS0haWDVsa09BMi9QM3B5bjg5VGN2cmpBZEJYR0FQMHpkRE5mUzkxY3NGR2gxNgp5SW50SnlXNUtRVEk5VnR3U1J0TEJQSU1DTDAwODF2RDFqVVJ1c1VUcEN4RG0yZjk1cDFWQ3lyNzlaYXRaK2NBCmhJZC8vd0lEQVFBQm8wZ3dSakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUgKQXdJd0h3WURWUjBqQkJnd0ZvQVVhbU1nMlBMZVFRMS9JN0ZuRHNUOGExSHpYK1l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHQmQvK1Q2dm0rZStrUHlON2Z1QktlRVVCNTRjVUlTT3hmSEI1aXQwbGdLZ1RkbW96UGNaUUxjCjkxVFBWSlFmUGZpcFVTYzNpV25acWw3ZVV6ZS91U2MxdWk4Z2cxTHVPOUZreEZoeTJCSEQ4MVhsM1NCa3lHQmUKSXNHaUwyUFFvb1lLUXI2YnVzK3ZwMUM1ekg1b2FCNkVFNTNHN1JlOUZLSkF5RUcvK3c3QnNPZFhmMEV1Qno5dgp5Sk5vR0l5cTRpSHZMcEF1MXFJZDhrYVVHVmRsRSthNG1mN09sZVI5ZWpGcEJsOFFOL29WTisyTFc0a25MZ1F4CkZybzdpTXo3L1N5c256d3A1c2pWRFdmdlE5Njh3MndXRE1qOHdDUWpzZFNFOGtIQUVPby9XL2lKWnBSMWE0MnMKemhVQldmU2JxRTI1ejJBMnIrOHFWNi9yVHRhMmUxdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBelBQL1RZUmp5bFBwVnQ3UWhXYXpHWmVtQzhsVkV0TWVuU0VHdTdVNEF1YjdMaTFrCjJZck5XUEhZSHUvZ0oxWGJqaS9Dc3d2NzMyWTRXNXl5aDFQTm92Y0hxN2NDU3UwOXcycnlFMzBUOVhKNkFQSmUKdWk1U3AwTG5wdjRZdUVUTUswY0ZKaXpmZVNqUmVRRDNVaXFCbmJiL1hMQ0xNR1FWbDVIeTVleENqb0tJdUQ5NgpaZFZtbkZDcmd0YTBZZWgxRDBRd2hTcTgzcHhZdVJWbjd1ZmgvYTZrbHVpREZCOEtHWUtIWlg1bGtPQTIvUDNwCnluODlUY3ZyakFkQlhHQVAwemRETmZTOTFjc0ZHaDE2eUludEp5VzVLUVRJOVZ0d1NSdExCUElNQ0wwMDgxdkQKMWpVUnVzVVRwQ3hEbTJmOTVwMVZDeXI3OVphdForY0FoSWQvL3dJREFRQUJBb0lCQUFRMlk2SHhQYWZUNzdEVQpaWTdJWEpnREVPdWZHTHVKVVZERGRBTDVwNHdQdVV2cXJPNzN0bDdFb2IrSkNKOW1XVnZqeVdtcXJtT2FFMEIyCnlRaVZCVjM3RzlKQXNiQmVqZTF0VGtwdVFMSER4NVFyWngwR2hMWmhYcWVGQTNjT0d2QXN4b05SV3NwL3QwWjQKYVp6cnVMeElIWm1IRzJWRU9WbGpLNDNrUEQzM2tXUnN4ekw5ckxjQW5tU0VERFlUK2V6MzNpSFhtaTdlUDZydgpOQTQ3SUltQStrSGMyMmdvTGp1c1B3N0MrUGFpbklGTUIycjBnbzRJUDh5TUpnL3FFckVqZ3hOd1FNOUpjZ051CnJmRENQNG9OU0FKQ3F5U2YwUXlKRFJMajU2OTc5WVRxakNtMmJwd29NOXhaQUYzWUlnR2RPLzdzL0R6VnQrOHMKS01sL0hqRUNnWUVBelBkNVNaVGR4R2dTOUYwZUJrWWR1c1FoU2JmZE1tZnhkeDRGL212eGVlSkxpWTVCbnlhdwpLK2pMVmhwMEJkVkUwN05ZZkMrOCt4bm4yMDFJck82QmJadk1pUGo0UHk4Mm9sV0xKSENldmJVbXZkNVFRRVJJCkl4dlZHNHg0L0w5bnQzVWRkQTNBTzZWaDV3TndudnFkSW96SUhOVEdiY0ZhU2NNbzlWYWdVdGNDZ1lFQS8vdW8KYklsWGVjak1YbzY4aUhSU0MwUWt5SExqZkxDOXlOMDVDUktiYW5VdkU2YnhoNDgrNXBTWGdVMnlEVk1vd29WcApQR0pUdmRMUHdvMXZsNlhveC84ZmJSWW5OWkZ2ZFdxTG5WYnV2VnRwK0NYbGZaendBNDlTYkV4aWhpOWRTQnk3CjY4UXBnNjNZUGpLNEZoNVNaRzBzSmI4NzJuTDJIU2VybmNaWHZ4a0NnWUFIanlUdytzV0hCZE9WSVk0RzZ6VVQKZTBKREJyM29xdjZ6eHU2dnFHbDZka2NVNXFNeTdHbFk1VGdDaisweGZlRVE4YTlVdlNuNkZNV0JTQU5qSlZTdQpweTFPNitlejVOamQrY3VzNTE1alhyZjBEcXZsQXQrcU04K1RPWVlJeEVKZCtMckNXZk41LzZweHE2WE9weTErClpiVEhvMjFDQlB5QWRlc2Z5VGNXZHdLQmdRQzN3Q3BTWHZSUUUzZkFtSzExTmlwK3M5ZkRtOVQ0ZU5hRERXb1gKdlNlYTc2dHZhL01NNENMQzJmODNibEpWaGxCSDhnUnN1QmhzdHBzMGlOcUYvUzV3QWc3SSs1SUJ2ZmhJVE1jVApsb2VobmJFZjAvUThpeDh2THY1M2h3MWlUVFdrd2h1VFRpaU93WWZzZmZQdXpLMVFNWjN6S3FjSVZHV2U0QTh0CkhtZDJZUUtCZ1FDc0QxbjVkVjh1b2JiU1pCMnVtYnBqNEpISTQ4YmplUTBYeEdPWFRHS01zWERJQWpZVnExVXoKYTkvelRjS1Vra1pKNGFaTVdGb21yWjdYOHNUd2pDOEhtN3h3eUhFODdrOE0xbzREa0JySlJna1ptRWxaTjFOZAo2SktTZDBCWFJGUU8xVGtBTW5SWXRiNm5URENvMUNaNmVncnFTNkV1aFBoQmpua0pKblJVN2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

`,
		UserName: fmt.Sprintf("%vrandom%v", rand.Int(), rand.Int()),
		Password: "",
	}
}

func getHttpClientWithCert() *nethttp.Client {
	return util.GetHttpClientWithTls(config.GetConfig().Tls.CertificatePath, config.GetConfig().Tls.KeyPath, true)
}

func (h *UserInfo) Refresh() (*nethttp.Response, herr.Error) {
	svcMeta := config.GetServiceMeta("hutil")
	cli := getHttpClientWithCert()
	res, err := cli.Get(fmt.Sprintf("%v://%v/%v", svcMeta.Scheme, svcMeta.Endpoint, subPath))
	if err != nil {
		return nil, herr.ErrSvcHalt(err)
	}
	return res, nil
}

func (u *UserInfo) RefreshToken() error {
	return nil
}
